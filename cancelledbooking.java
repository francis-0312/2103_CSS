/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import MyConnection.MyConnection;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author HP
 */
public class cancelledbooking extends javax.swing.JFrame {

    private Connection connect;

    public cancelledbooking() {
        initComponents();
        MyConnection conn = new MyConnection();
        connect = conn.getConnection();
        initializeTable();
        loadBookingDetails();
    }
    
    private void initializeTable() {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{
            "BookingID", "ClientName", "ClientNumber", "EventLocation", 
            "EventDate", "EventTime", "No. of Guests", "Event", 
            "Package", "TotalPrice", "Status"
        });
        cTable.setModel(model);
    }

    private void loadBookingDetails() {
        try {
            if (connect == null) {
                System.out.println("Database connection is not established!");
                return;
            }

            PreparedStatement pst = connect.prepareStatement("SELECT * FROM bookingdetails");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            int columnCount = rss.getColumnCount();

            DefaultTableModel df = (DefaultTableModel) cTable.getModel();
            df.setRowCount(0); 

            while (rs.next()) {
                Vector<String> row = new Vector<>();
                row.add(rs.getString("BookingID"));
                row.add(rs.getString("ClientName"));
                row.add(rs.getString("ClientNumber"));
                row.add(rs.getString("EventLocation"));
                row.add(rs.getString("EventDate"));
                row.add(rs.getString("EventTime"));
                row.add(rs.getString("NoOfGuests"));
                row.add(rs.getString("Event"));
                row.add(rs.getString("SelectedPackage"));
                row.add(rs.getString("TotalPrice"));
                row.add(rs.getString("Status"));

                df.addRow(row);
            }

        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
            ex.printStackTrace();
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(102, 102, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Cancel Book");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 510, 130, 40));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CANCELLED BOOKING");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 1030, -1));

        cTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "BookingID", "ClientName", "ClientNumber", "EventLocation", "EventDate", "EventTime", "No. of Guests", "Event", "Package", "TotalPrice", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(cTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 47, 1036, 460));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Back");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 710, 116, 44));

        jButton3.setBackground(new java.awt.Color(102, 102, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Delete List");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 510, 130, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 780));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Front_Page fp1 = new Front_Page();
        fp1.show();

        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                                                                         
    int selectedRow = cTable.getSelectedRow(); 
    
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select a booking to delete.");
        return;
    }
    
    String bookingID = cTable.getValueAt(selectedRow, 0).toString();

    int confirm = JOptionPane.showConfirmDialog(null, 
        "Are you sure you want to delete the selected booking?", "Delete Confirmation", JOptionPane.YES_NO_OPTION);
    
    if (confirm == JOptionPane.YES_OPTION) {
        try {

            connect.setAutoCommit(false);

            String sqlDetails = "DELETE FROM bookingdetails WHERE BookingID = ?";
            PreparedStatement pstDetails = connect.prepareStatement(sqlDetails);
            pstDetails.setString(1, bookingID);
            

            String sqlBooking = "DELETE FROM booking WHERE BookingID = ?";
            PreparedStatement pstBooking = connect.prepareStatement(sqlBooking);
            pstBooking.setString(1, bookingID);


            int rowsAffectedDetails = pstDetails.executeUpdate();
            int rowsAffectedBooking = pstBooking.executeUpdate();

            if (rowsAffectedDetails > 0 && rowsAffectedBooking > 0) {
                JOptionPane.showMessageDialog(null, "Booking deleted successfully.");
                connect.commit();
                loadBookingDetails();
            } else {
                JOptionPane.showMessageDialog(null, "Booking deletion failed.");
                connect.rollback();
            }
        } catch (SQLException ex) {
            try {
                connect.rollback();
            } catch (SQLException rollbackEx) {
                rollbackEx.printStackTrace();
            }
            JOptionPane.showMessageDialog(null, "Error deleting booking: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            try {
                connect.setAutoCommit(true);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                                   
    int selectedRow = cTable.getSelectedRow();
    
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select a booking to cancel.");
        return;
    }
    
    String bookingID = cTable.getValueAt(selectedRow, 0).toString();

    int confirm = JOptionPane.showConfirmDialog(null, 
        "Are you sure you want to cancel the selected booking?", "Cancel Confirmation", JOptionPane.YES_NO_OPTION);
    
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            String sqlDetails = "UPDATE bookingdetails SET Status = ? WHERE BookingID = ?";
            PreparedStatement pstDetails = connect.prepareStatement(sqlDetails);
            pstDetails.setString(1, "Cancelled");
            pstDetails.setString(2, bookingID); 
            
            String sqlBooking = "UPDATE booking SET Status = ? WHERE BookingID = ?";
            PreparedStatement pstBooking = connect.prepareStatement(sqlBooking);
            pstBooking.setString(1, "Cancelled"); 
            pstBooking.setString(2, bookingID);

            int rowsAffectedDetails = pstDetails.executeUpdate();
            int rowsAffectedBooking = pstBooking.executeUpdate();

            if (rowsAffectedDetails > 0 && rowsAffectedBooking > 0) {
                JOptionPane.showMessageDialog(null, "Booking cancelled successfully.");
                loadBookingDetails();
            } else {
                JOptionPane.showMessageDialog(null, "Booking cancellation failed.");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error cancelling booking: " + ex.getMessage());
            ex.printStackTrace();
        }
    }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cancelledbooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cancelledbooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cancelledbooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cancelledbooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cancelledbooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable cTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
